/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Analytics {
  day: Generated<number>;
  leagueActive: string;
  leagueTotal: string;
  localeActive: string;
  localeTotal: string;
  themeActive: string;
  themeTotal: string;
  versionActive: string;
  versionTotal: string;
}

export interface Announcements {
  description: string;
  leagueID: number;
  priority: string;
  title: string;
}

export interface Clubs {
  club: string;
  exists: Generated<number>;
  fullName: string | null;
  gameEnd: number;
  gameStart: number;
  home: number;
  league: string;
  opponent: string | null;
  opponentScore: number | null;
  teamScore: number | null;
}

export interface Data {
  value1: string;
  value2: string;
}

export interface DetailedAnalytics {
  active: number;
  day: number;
  leagueActive: string;
  leagueTotal: string;
  localeActive: string;
  localeTotal: string;
  serverID: string;
  themeActive: string;
  themeTotal: string;
  total: number;
  version: string;
}

export interface FutureClubs {
  club: string;
  fullName: string | null;
  gameStart: number;
  home: number;
  league: string;
  opponent: string;
}

export interface FuturePredictions {
  away: number | null;
  club: string;
  gameStart: number;
  home: number | null;
  league: string;
  leagueID: number;
  user: number;
}

export interface HistoricalClubs {
  club: string;
  exists: Generated<number>;
  fullName: string | null;
  gameStart: number;
  home: number;
  league: string;
  opponent: string | null;
  opponentScore: number | null;
  teamScore: number | null;
  time: number;
}

export interface HistoricalPlayers {
  average_points: number;
  club: string;
  exists: number;
  forecast: string;
  last_match: number;
  league: string;
  name: string;
  nameAscii: string;
  pictureID: number;
  position: string;
  sale_price: number;
  time: number;
  total_points: number;
  uid: string;
  value: number;
}

export interface HistoricalPredictions {
  away: number | null;
  club: string;
  home: number | null;
  league: string;
  leagueID: number;
  matchday: number;
  user: number;
}

export interface HistoricalSquad {
  leagueID: number;
  matchday: number;
  playeruid: string;
  position: string;
  starred: Generated<number>;
  user: number;
}

export interface HistoricalTransfers {
  buyer: number;
  leagueID: number;
  matchday: number;
  playeruid: string;
  seller: number;
  value: number;
}

export interface Invite {
  inviteID: string;
  leagueID: number;
}

export interface LeagueSettings {
  active: Generated<number>;
  archived: Generated<number>;
  duplicatePlayers: Generated<number>;
  fantasyEnabled: Generated<number>;
  inactiveDays: Generated<number>;
  league: string;
  leagueID: Generated<number>;
  leagueName: string;
  matchdayTransfers: Generated<number>;
  predictDifference: Generated<number>;
  predictExact: Generated<number>;
  predictionsEnabled: Generated<number>;
  predictWinner: Generated<number>;
  starredPercentage: Generated<number>;
  startMoney: Generated<number>;
  top11: Generated<number>;
  transfers: Generated<number>;
}

export interface LeagueUsers {
  admin: Generated<number>;
  fantasyPoints: Generated<number>;
  formation: Generated<string>;
  leagueID: number;
  money: number;
  points: Generated<number>;
  predictionPoints: Generated<number>;
  tutorial: Generated<number>;
  user: number;
}

export interface Pictures {
  downloaded: Generated<number>;
  downloading: Generated<number>;
  height: Generated<number>;
  id: Generated<number>;
  url: string;
  width: Generated<number>;
}

export interface Players {
  average_points: number;
  club: string;
  exists: number;
  forecast: string;
  last_match: number;
  league: string;
  locked: number;
  name: string;
  nameAscii: string;
  pictureID: number;
  position: string;
  sale_price: number;
  total_points: number;
  uid: string;
  value: number;
}

export interface Plugins {
  enabled: Generated<number>;
  installed: Generated<number>;
  name: string | null;
  settings: string;
  url: string;
  version: Generated<string>;
}

export interface Points {
  fantasyPoints: Generated<number>;
  leagueID: number;
  matchday: number;
  money: number;
  points: Generated<number>;
  predictionPoints: Generated<number>;
  time: number | null;
  user: number;
}

export interface Predictions {
  away: number | null;
  club: string;
  home: number | null;
  league: string;
  leagueID: number;
  user: number;
}

export interface Squad {
  leagueID: number;
  playeruid: string;
  position: string;
  starred: Generated<number>;
  user: number;
}

export interface Transfers {
  buyer: number;
  leagueID: number;
  max: number;
  playeruid: string;
  position: Generated<string>;
  seller: number;
  starred: Generated<number>;
  value: number;
}

export interface Users {
  active: Generated<number>;
  admin: Generated<number>;
  favoriteLeague: number | null;
  github: Generated<string>;
  google: Generated<string>;
  id: Generated<number>;
  inactiveDays: Generated<number>;
  locale: string | null;
  password: string;
  theme: string | null;
  throttle: Generated<number>;
  username: string;
}

export interface DB {
  analytics: Analytics;
  announcements: Announcements;
  clubs: Clubs;
  data: Data;
  detailedAnalytics: DetailedAnalytics;
  futureClubs: FutureClubs;
  futurePredictions: FuturePredictions;
  historicalClubs: HistoricalClubs;
  historicalPlayers: HistoricalPlayers;
  historicalPredictions: HistoricalPredictions;
  historicalSquad: HistoricalSquad;
  historicalTransfers: HistoricalTransfers;
  invite: Invite;
  leagueSettings: LeagueSettings;
  leagueUsers: LeagueUsers;
  pictures: Pictures;
  players: Players;
  plugins: Plugins;
  points: Points;
  predictions: Predictions;
  squad: Squad;
  transfers: Transfers;
  users: Users;
}
